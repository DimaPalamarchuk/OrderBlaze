<div class="bg-light border col-6" @onclick="(args)=>SelectedProductUpdated(args, Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4>

    <input type="checkbox" @onchange="FavoriteUpdate"/> Add to Favorites <br/><br />

    Name - @Product.Name <br />
    Show Properties:
    <input type="checkbox" @bind="@Product.IsActive" />
    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_DeleteButtonComponent ProductId="@Product.Id">

    </_DeleteButtonComponent>
</div>

@code {
    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdate { get; set; }

    [Parameter]
    public EventCallback<string> OnSelectedProductChange { get; set; }

    private async Task FavoriteUpdate(ChangeEventArgs args)
    {
        await OnFavoriteUpdate.InvokeAsync((bool)args.Value);
    }

    private async Task SelectedProductUpdated(MouseEventArgs args, string productName)
    {
        await OnSelectedProductChange.InvokeAsync(productName);
    }
}
